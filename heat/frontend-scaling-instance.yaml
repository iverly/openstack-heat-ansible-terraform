heat_template_version: 2014-10-16

description: >
  This template deploys a frontend instance with a floating IP and a pool member

parameters:
  image:
    type: string
    description: Name of the image to use
  flavor:
    type: string
    description: Flavor to use for the instance
  public_network_name:
    type: string
    description: Name of the public network to use
  key_name:
    type: string
    description: Key pair name
  network:
    type: string
    description: Name of the private network to use
  pool:
    type: string
    description: Pool to contact
  cloud_init_config:
    type: string
    description: Cloud init config to use
  frontend_security_group:
    type: string
    description: Security group to use for the frontend instance
  subnet:
    type: string
    description: Subnet to use for the frontend instance

resources:
  ##########################################
  ##      Compute Network resources       ##
  ##########################################
  server:
    type: OS::Nova::Server
    properties:
      name:
        list_join: ["-", [{ get_param: "OS::stack_name" }, "frontend-server"]]
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      user_data_format: RAW
      user_data: { get_param: cloud_init_config }
      networks:
        - port: { get_resource: port }

  ##########################################
  ##           Network resources          ##
  ##########################################
  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network }
      security_groups: [get_param: frontend_security_group]
      fixed_ips:
        - subnet: { get_param: subnet }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_network_name }

  floating_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: { get_resource: port }

  ##########################################
  ##        Load Balancer resources       ##
  ##########################################
  member:
    type: OS::Octavia::PoolMember
    properties:
      pool: { get_param: pool }
      address: { get_attr: [server, first_address] }
      protocol_port: 8080
      subnet: { get_param: subnet }
